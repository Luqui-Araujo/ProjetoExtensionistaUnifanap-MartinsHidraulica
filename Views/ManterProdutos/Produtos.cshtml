
@{
    ViewBag.Title = "Produtos";
    Layout = "_Layout";
}

<h3 class="mt-3 mb-3 text-center" style="font-weight: bold">Lista de Produtos e Serviços</h3>
<div class="row d-flex justify-content-center text-center mb-2">
    <div class="col-auto">
        <button type="button" class="btn btn-primary mb-3"
                data-bs-toggle="modal"
                data-bs-target="#modalCadastrarProduto"
                title="Adicionar Produto">
            <i class="fas fa-plus"></i>
        </button>
    </div>
    <div class="col-6">
        <input type="text" id="searchInput" class="form-control" placeholder="Buscar Produtos..."/>
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-success"
                onclick="carregarProdutosAtivos()"
                title="Produtos Ativos">
            <i class="fas fa-bag-shopping"></i>
        </button>
        <button type="button" class="btn btn-danger"
                onclick="carregarProdutosInativos()"
                title="Produtos Inativos">
            <i class="fas fa-bag-shopping"></i>
        </button>
    </div>
</div>

<!-- Modal Cadastro de Produtos -->
<div class="modal fade" id="modalCadastrarProduto" tabindex="-1" aria-labelledby="modalCadastrarProduto" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="criarProdutoForm" action="/ManterProdutos/RegistrarProduto" method="POST">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="criarProduto">Adicionar novo produto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-6 mb-3">
                            <label for="nome" class="form-label">Nome:</label>
                            <input type="text" class="form-control" id="nome" name="Nome" placeholder="Nome" required/>
                        </div>
                        
                        <div class="col-6 mb-3">
                            <label for="preco" class="form-label">Preço:</label>
                            <input type="number" class="form-control" id="preco" name="Preco" placeholder="Preço" required/>
                        </div>
                        
                        <div class="col-12 mb-3">
                            <label for="descricao" class="form-label">Descrição:</label>
                            <textarea class="form-control" id="descricao" name="Descricao"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Salvar Produto</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Edição de Produtos -->
<div class="modal fade" id="modalEditarProduto" tabindex="-1" aria-labelledby="modalEditarProduto" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editarProdutoForm" action="/ManterProdutos/EditarProduto" method="POST">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="editarProduto">Atualizar produto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="id" id="idProdutoEdicao">
                    <div class="row">
                        <div class="col-6 mb-3">
                            <label for="nome" class="form-label">Nome:</label>
                            <input type="text" class="form-control" id="nomeProdutoEdicao" name="Nome" placeholder="Nome" required/>
                        </div>

                        <div class="col-6 mb-3">
                            <label for="preco" class="form-label">Preço:</label>
                            <input type="number" class="form-control" id="precoProdutoEdicao" name="Preco" placeholder="Preço" required/>
                        </div>

                        <div class="col-6 mb-3">
                            <label for="descricao" class="form-label">Descrição:</label>
                            <textarea class="form-control" id="descricaoProdutoEdicao" name="Descricao"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Salvar Produto</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!--Tabela de clientes-->
<table class="table table-striped text-center table-hover">
    <thead>
    <tr class="row">
        <th class="col-6">Nome</th>
        <th class="col-4">Preço</th>
        <th class="col-2">Ações</th>
    </tr>
    </thead>
    <tbody id="resultsBody" class="table-secondary">
        
    </tbody>
</table>

@section Scripts {
    <script>
        
        var produtosCarregados = [];
        
        $(document).ready(function () {
           carregarProdutosAtivos();

            //Edição de produto
            $(document).on('submit', '#editarProdutoForm', function(e) {
                e.preventDefault();

                var form = $(this)[0];
                var formData = new FormData(form); //Cria um formdata com os campos e o arquivo

                $.ajax({
                    url: $(this).attr('action'), //Pega a url que foi definida no action do form
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            //Fecha o modal
                            $('#modalEditarProduto').modal('hide');
                            carregarProdutosAtivos();
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Erro ao editar o produto');
                    }
                })
            })

            //Evento de pesquisa
            $('#searchInput').on('input', function () {
                var termo = $(this).val().toLowerCase();
                filtrarProdutos(termo);
            });

            //Função para filtrar os clientes
            function filtrarProdutos(termo) {
                var produtosFiltrados = produtosCarregados.filter(function (produto) {
                    return (
                        produto.nome.toLowerCase().includes(termo)
                    );
                });
                preencherTabela(produtosFiltrados); // Atualiza a tabela com os produtos filtrados
            }
        });

        //Registro de novos produtos 
        $('#criarProdutoForm').on('submit', function (e) {
            e.preventDefault();

            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success('Produto cadastrado com sucesso!');
                        // Fecha o modal
                        $('#modalCadastrarProduto').modal('hide');
                        // Reseta o formulário
                        $('#criarProdutoForm')[0].reset();
                        // Atualiza a tabela
                        carregarProdutosAtivos();
                    } else {
                        var errorList = $('<ul class="text-danger"></ul>');
                        if (Array.isArray(response.message)) {
                            response.message.forEach(function (message) {
                                errorList.append($('<li></li>').text(message));
                            });
                        } else {
                            errorList.append($('<li></li>').text(response.message));
                        }
                        $('#errorContainer').html(errorList);
                    }
                },
                error: function () {
                    alert('Ocorreu um erro ao processar a requisição.');
                }
            });
        });
        
        //Preencher a tabela com os produtos cadastrados
        function preencherTabela(produtos) {
            var tbody = $('#resultsBody');
            tbody.empty();
            
            produtos.forEach(function (produto) {
                var row = `
                    <tr class="row">
                        <td class="col-6">${produto.nome}</td>
                        <td class="col-4">${produto.preco}</td>
                        <td class="col-2">
                            ${produto.ativo ? `
                                <button type="button" class="btn btn-sm btn-secondary editarProduto"
                                    data-id="${produto.id}"
                                    data-bs-toggle="modal"
                                    data-bs-target="#modalEditarProduto"
                                    title="Editar">
                                    <i class="fas fa-pencil"></i>
                                </button>
                                 <button type="submit" class="btn btn-sm btn-danger"
                                    onclick="InativarProduto('${produto.id}')"
                                    title="Inativar">
                                    <i class="fas fa-minus"></i>
                                 </button>   
                            
                            `:`
                                 <!-- Botões para inativos -->
                                 <button type="submit" class="btn btn-sm btn-success"
                                    onclick="ReativarProduto('${produto.id}')"
                                    title="Reativar">
                                    <i class="fas fa-check"></i>
                                 </button>
                            `}
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });
        }
        
        //Carregar os produtos ativos
        function carregarProdutosAtivos() {
            $.ajax({
                url: '/ManterProdutos/ListarProdutosAtivos',
                type: 'GET',
                success: function (produtos){
                    produtosCarregados = produtos;
                    preencherTabela(produtos);
                }
            })
        }
        
        //Carregar os produtos Inativos
        function carregarProdutosInativos() {
            $.ajax({
                url: '/ManterProdutos/ListarProdutosInativos',
                type: 'GET',
                success: function (produtos) {
                    produtosCarregados = produtos;
                    preencherTabela(produtos);
                }
            })
        }

        //Inativar usuários
        function InativarProduto(id) {
            $.ajax({
                url: '/ManterProdutos/Inativar',
                type: 'POST',
                data: {
                    id: id
                },
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    toastr.success("Produto inativado");
                    carregarProdutosInativos();
                },
                error: function () {
                    toastr.error("Erro ao inativar o produto");
                }
            });
        }

        //Reativar usuários inativos
        function ReativarProduto(id) {
            $.ajax({
                url: '/ManterProdutos/Reativar',
                type: 'POST',
                data: {
                    id: id
                },
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    toastr.success("Produto reativado");
                    carregarProdutosAtivos();
                },
                error: function () {
                    toastr.error("Erro ao reativar o produto");
                }
            })
        }

        //Quando abrir o modal de edição da empresa preenche os dados
        $('#modalEditarProduto').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Captura o botão que acionou o modal
            var id = button.attr('data-id'); // Obtém o ID diretamente do atributo

            if (!id) {
                console.error(id);
                return;
            }

            $.ajax({
                url: '/ManterProdutos/ObterProdutos',
                type: 'GET',
                data: {id: id},
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                dataType: 'json',
                success: function (produto) {
                    $('#idProdutoEdicao').val(produto.id);
                    $('#nomeProdutoEdicao').val(produto.nome);
                    $('#precoProdutoEdicao').val(produto.preco);
                    $('#descricaoProdutoEdicao').val(produto.descricao);
                },
                error: function () {
                    toastr.error('Erro ao carregar os dados do cliente');
                }
            })
        })
    </script>
}